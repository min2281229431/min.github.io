''' '''
import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号
# =========================================================================== #
x1 = np.array([148, 139, 160, 149, 159, 142, 153, 150, 151, 139,
               140, 161, 158, 140, 137, 152, 149, 145, 160, 156,
               151, 147, 157, 147, 157, 151, 144, 141, 139, 148])

x2 = np.array([41, 34, 49, 36, 45, 31, 43, 43, 42, 31,
               29, 47, 49, 33, 31, 35, 47, 35, 47, 44,
               42, 38, 39, 30, 48, 36, 36, 30, 32, 38])

x3 = np.array([72, 71, 77, 67, 80, 66, 76, 77, 77, 68,
               64, 78, 78, 67, 66, 73, 82, 70, 74, 78,
               73, 73, 68, 65, 80, 74, 68, 67, 68, 70])

x4 = np.array([78, 76, 86, 79, 86, 76, 83, 79, 80, 74,
               74, 84, 83, 77, 73, 79, 79, 77, 87, 85,
               82, 78, 80, 75, 88, 80, 76, 76, 73, 78])

stu_data = np.matrix([x1, x2, x3, x4]).T

'''
求四个向量之间的方差-协方差矩阵时，需要对矩阵进行转置，将列向量转换成行向量。
求相关系数矩阵时同样也要进行转置，相关系数矩阵是协方差矩阵进行标准化转换之后的结果。
'''
# ****协方差矩阵：covariance****
cov_stu = np.cov(stu_data.T)  # 方差-协方差矩阵
# ****相关系数矩阵：correlation coefficient****
rou_stu = np.corrcoef(stu_data.T)

# 四个随机向量之间的相关程度很高，尤其是身高与坐高之间的相关性最高（0.92）。
print('学生身高、体重、胸围和坐高之间的协方差与相关系数矩阵分别如下：'
      '\n\n', np.round(cov_stu, 2),
      '\n\n', np.round(rou_stu, 2))
